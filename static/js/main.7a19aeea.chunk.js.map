{"version":3,"sources":["Loading.js","Tour.js","Tours.js","App.js","index.js"],"names":["Loading","className","Tour","id","image","info","price","name","removeTour","useState","readMore","setReadMore","src","alt","substring","onClick","Tours","tours","map","tour","key","App","loading","setLoading","setTours","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTours","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAUeA,EARC,WACd,OACE,yBAAKC,UAAU,WACb,4CCqBSC,EAxBF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EAC5BC,oBAAS,GADmB,mBACrDC,EADqD,KAC3CC,EAD2C,KAE5D,OACG,6BAASV,UAAU,eAChB,yBAAKW,IAAKR,EAAOS,IAAKN,IACtB,gCACG,yBAAKN,UAAU,aACZ,4BAAKM,GACL,wBAAIN,UAAU,cAAd,IAA6BK,IAEhC,2BACII,EAAWL,EAAH,UAAaA,EAAKS,UAAU,EAAG,KAA/B,OACT,4BAAQC,QAAS,kBAAMJ,GAAaD,KAChCA,EAAW,YAAc,cAGhC,4BAAQT,UAAU,aAAac,QAAS,kBAAMP,EAAWL,KAAzD,qBCCGa,EAhBD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOT,EAAiB,EAAjBA,WACrB,OACG,iCACG,yBAAKP,UAAU,SACZ,yCACA,yBAAKA,UAAU,eAElB,6BACIgB,EAAMC,KAAI,SAACC,GACT,OAAO,kBAAC,EAAD,eAAMC,IAAKD,EAAKhB,IAAQgB,EAAxB,CAA8BX,WAAYA,WCsDjDa,MA5Df,WAAgB,IAAD,EACkBZ,oBAAS,GAD3B,mBACLa,EADK,KACIC,EADJ,OAEcd,mBAAS,IAFvB,mBAELQ,EAFK,KAEEO,EAFF,KAUNC,EAAU,uCAAG,8BAAAC,EAAA,6DAEhBH,GAAW,GAFK,kBAKUI,MAjBpB,8CAYU,cAKPC,EALO,gBAMOA,EAASC,OANhB,OAMPZ,EANO,OAQbM,GAAW,GACXC,EAASP,GATI,kDAWbM,GAAW,GACXO,QAAQC,IAAR,MAZa,0DAAH,qDAqBhB,OAJAC,qBAAU,WACPP,MACA,IAECH,EAEE,8BACG,kBAAC,EAAD,OAMY,IAAjBL,EAAMgB,OAEJ,8BACG,yBAAKhC,UAAU,SACZ,6CACA,4BAAQA,UAAU,MAAMc,QAASU,GAAjC,aAST,8BACG,kBAAC,EAAD,CAAOR,MAAOA,EAAOT,WAnDR,SAACL,GACjB,IAAM+B,EAAWjB,EAAMkB,QAAO,SAAChB,GAAD,OAAUA,EAAKhB,KAAOA,KACpDqB,EAASU,QCPfE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7a19aeea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from 'react';\r\n\r\nconst Tour = ({ id, image, info, price, name, removeTour }) => {\r\n   const [readMore, setReadMore] = useState(false);\r\n   return (\r\n      <article className='single-tour'>\r\n         <img src={image} alt={name} />\r\n         <footer>\r\n            <div className='tour-info'>\r\n               <h4>{name}</h4>\r\n               <h4 className='tour-price'>${price}</h4>\r\n            </div>\r\n            <p>\r\n               {readMore ? info : `${info.substring(0, 200)}...`}\r\n               <button onClick={() => setReadMore(!readMore)}>\r\n                  {readMore ? 'show less' : 'read more'}\r\n               </button>\r\n            </p>\r\n            <button className='delete-btn' onClick={() => removeTour(id)}>\r\n               not interested\r\n            </button>\r\n         </footer>\r\n      </article>\r\n   );\r\n};\r\n\r\nexport default Tour;\r\n","import React from 'react';\r\nimport Tour from './Tour';\r\n\r\nconst Tours = ({ tours, removeTour }) => {\r\n   return (\r\n      <section>\r\n         <div className='title'>\r\n            <h2>our tours</h2>\r\n            <div className='underline'></div>\r\n         </div>\r\n         <div>\r\n            {tours.map((tour) => {\r\n               return <Tour key={tour.id} {...tour} removeTour={removeTour} />;\r\n            })}\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Tours;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Loading from './Loading';\r\nimport Tours from './Tours';\r\n\r\nconst url = 'https://course-api.com/react-tours-project';\r\n\r\nfunction App() {\r\n   const [loading, setLoading] = useState(true);\r\n   const [tours, setTours] = useState([]);\r\n\r\n   const removeTour = (id) => {\r\n      const newTours = tours.filter((tour) => tour.id !== id);\r\n      setTours(newTours);\r\n   };\r\n\r\n   //function to fetch tours\r\n   const fetchTours = async () => {\r\n      //an extra precaution to ensure that loading is truw while fetching data\r\n      setLoading(true);\r\n\r\n      try {\r\n         const response = await fetch(url);\r\n         const tours = await response.json();\r\n         //console.log(tours);\r\n         setLoading(false);\r\n         setTours(tours);\r\n      } catch (error) {\r\n         setLoading(false);\r\n         console.log(error);\r\n      }\r\n   };\r\n\r\n   //calling fetchTours function when page loads\r\n   useEffect(() => {\r\n      fetchTours();\r\n   }, []);\r\n\r\n   if (loading) {\r\n      return (\r\n         <main>\r\n            <Loading />\r\n         </main>\r\n      );\r\n   }\r\n\r\n   //if all tours were deleted from the list of tours\r\n   if (tours.length === 0) {\r\n      return (\r\n         <main>\r\n            <div className='title'>\r\n               <h2>no tours left</h2>\r\n               <button className='btn' onClick={fetchTours}>\r\n                  refresh\r\n               </button>\r\n            </div>\r\n         </main>\r\n      );\r\n   }\r\n\r\n   return (\r\n      <main>\r\n         <Tours tours={tours} removeTour={removeTour} />\r\n      </main>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}